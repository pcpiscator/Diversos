Para transformar seu código HTML em um aplicativo para smartphone, podemos usar uma abordagem simples que envolve a criação de um Progressive Web App (PWA). Um PWA permite que você configure um aplicativo da web que pode ser instalado em dispositivos móveis. Eu vou adicionar o Manifesto Web App e o Service Worker para permitir essa funcionalidade.

Aqui está como você pode modificar seu código existente para transformá-lo em um PWA:

### 1. Crie o Arquivo HTML

Salve o código HTML abaixo em um arquivo chamado `index.html`.

```html
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="theme-color" content="#000000">
    <title>Pedra, Papel ou Tesoura</title>
    <link rel="manifest" href="manifest.json">
    <style>
        /* Estilos para o botão */
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: black;
            color: white;
            text-align: center;
        }
        button {
            background-color: #ff1b7b;
            border: none;
            padding: 10px 20px;
            font-size: 1.2em;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }
        button:hover {
            background-color: #1abc9c;
        }
        .container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        footer {
            position: fixed;
            bottom: 10px;
        }
    </style>
    <script>
        function jogar() {
            let escolhajogador = prompt("Digite 1 - Pedra, 2 - Papel ou 3 - Tesoura");
            let escolhacomputador = Math.floor(Math.random() * 3) + 1;

            // Empate
            if (escolhajogador == escolhacomputador) {
                alert("Deu empate!");
                return;
            }

            // Jogador escolhe Pedra
            if (escolhajogador == 1) {
                if (escolhacomputador == 2) {
                    alert("Computador venceu. Escolheu Papel");
                } else {
                    alert("Jogador venceu. Computador escolheu Tesoura");
                }
            }

            // Jogador escolhe Papel
            if (escolhajogador == 2) {
                if (escolhacomputador == 1) {
                    alert("Jogador venceu. Escolheu Papel");
                } else {
                    alert("Computador venceu. Escolheu Tesoura");
                }
            }

            // Jogador escolhe Tesoura
            if (escolhajogador == 3) {
                if (escolhacomputador == 1) {
                    alert("Computador venceu. Escolheu Pedra");
                } else {
                    alert("Jogador venceu. Computador escolheu Papel");
                }
            }

            // Exibe a escolha do computador caso não haja empate
            if (escolhajogador != escolhacomputador) {
                alert("Escolha do Computador: " + (escolhacomputador === 1 ? "Pedra" : escolhacomputador === 2 ? "Papel" : "Tesoura"));
            }
        }
    </script>
</head>
<body>
    <div class="container">
        <h2>Responda:</h2>
        <p><strong>Pedra, Papel ou Tesoura?</strong></p>
        <button onclick="jogar()"><strong>Bora jogar!</strong></button>
    </div>
    <footer>Aprendizado 2025</footer>

    <script>
        // Registra o Service Worker
        if ('serviceWorker' in navigator) {
            window.addEventListener('load', function() {
                navigator.serviceWorker.register('sw.js').then(function(registration) {
                    console.log('Service Worker registrado com sucesso:', registration);
                }).catch(function(error) {
                    console.log('Registro do Service Worker falhou:', error);
                });
            });
        }
    </script>
</body>
</html>
```

### 2. Crie o Manifesto (`manifest.json`)

Salve o seguinte código em um arquivo chamado `manifest.json`.

```json
{
    "name": "Pedra, Papel ou Tesoura",
    "short_name": "Jogo",
    "start_url": "index.html",
    "display": "standalone",
    "background_color": "#000000",
    "theme_color": "#000000",
    "description": "Um simples jogo de Pedra, Papel ou Tesoura!",
    "icons": [
        {
            "src": "icon-192x192.png",
            "sizes": "192x192",
            "type": "image/png"
        },
        {
            "src": "icon-512x512.png",
            "sizes": "512x512",
            "type": "image/png"
        }
    ]
}
```

### 3. Crie o Service Worker (`sw.js`)

Salve o seguinte código em um arquivo chamado `sw.js`.

```javascript
self.addEventListener('install', function(event) {
    event.waitUntil(
        caches.open('v1').then(function(cache) {
            return cache.addAll([
                '/',
                '/index.html',
                '/manifest.json',
                // Adicione ícones ou outros arquivos que você estiver usando
                '/icon-192x192.png',
                '/icon-512x512.png'
            ]);
        })
    );
});

self.addEventListener('fetch', function(event) {
    event.respondWith(
        caches.match(event.request).then(function(response) {
            return response || fetch(event.request);
        })
    );
});
```

### 4. Ícones

Você vai precisar de ícones de pelo menos 192x192 e 512x512 pixels. Coloque esses arquivos na mesma pasta do seu `index.html`. Você pode nomeá-los como `icon-192x192.png` e `icon-512x512.png`.

### 5. Como Usar

1. **Teste Localmente**: 
   - Para testar o PWA localmente, você pode usar servidores como o [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer) do Visual Studio Code ou [http-server](https://www.npmjs.com/package/http-server) para Node.js.

2. **Instalação e Execução**: 
   - Abra seu navegador (preferencialmente Google Chrome) e navegue até sua aplicação.
  